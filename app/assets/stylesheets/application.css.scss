/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS and SCSS file within this directory, lib/assets/stylesheets, vendor/assets/stylesheets,
 * or vendor/assets/stylesheets of plugins, if any, can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the top of the
 * compiled file, but it's generally better to create a new file per style scope.
 *
 *= require_self
 *= require_directory .
 */

@font-face {
	font: {
		family: 'Gotham';
		weight: 'normal, bold';
		style:  'normal';
	}
	src: asset-url('gotham-rounded-medium.otf', font) format('truetype');
}

@font-face {
	font: {
		family: ProximaNova;
		weight: normal;
		style:  normal;
	}
	src: url('assets/fonts/ProximaNova-Regular.otf', font);
}

@font-face {
	font: {
		family: 'MuseoSlab';
		weight: 'normal, bold';
		style:  'normal';
	}
	src: url('assets/fonts/Museo Slab.otf', font) format('truetype');
}

@font-face {
	font: {
		family: SIMPLIFICA;
		weight: normal;
		style:  normal;
	}
	src: url('assets/fonts/SIMPLIFICA.ttf', font) format('truetype');
}

@font-face {
font-family: ‘Glyphicons Halflings’;
src: url(‘/assets/fonts/glyphicons-halflings-regular.eot’);
src: url(‘/asstes/fonts/glyphicons-halflings-regular.eot?#iefix’) format(‘embedded-opentype’),
url(‘/assets/fonts/glyphicons-halflings-regular.woff’) format(‘woff’),
url(‘/assets/fonts/glyphicons-halflings-regular.ttf’) format(‘truetype’),
url(‘/assets/fonts/glyphicons-halflings-regular.svg#glyphicons-halflingsregular’) format(‘svg’);
}

@font-face {
	font: {
		family: 'Lato-Light';
		weight: 'normal, bold';
		style:  'normal';
	}
	src: url('fonts/Lato-Light.ttf', font) format('truetype');
}

@font-face {
	font: {
		family: 'Lato-Regular';
		weight: 'normal, bold';
		style:  'normal';
	}
	src: url('fonts/Lato-Regular.ttf', font) format('truetype');
}

@font-face {
	font: {
		family: RictyDiminished-Regular;
		weight: normal;
		style:  normal;
	}
	src: url('fonts/RictyDiminished-Regular.ttf', font) format('truetype');
}

a {
	font-family: Gotham;
}


.login_modal {
	cursor: pointer;
}

.content{
	float: left;	
}


.highlight {
  font-family: Consolas,"Liberation Mono",Courier,monospace;
  line-height: 1.4;
  padding: 12px;
  margin-bottom: 16px;
  border: solid 2px #eee;
  border-radius: 2px;
  background-color: #fafafa;
  overflow: scroll;

  pre {
    font-size: 12px;
    margin: 0px;
  }

  .hll { background-color: #ffffcc }
  .c { color: #999988; font-style: italic } /* Comment */
  .err { color: #a61717; background-color: #e3d2d2 } /* Error */
  .k { color: #000000; font-weight: bold } /* Keyword */
  .o { color: #000000; font-weight: bold } /* Operator */
  .cm { color: #999988; font-style: italic } /* Comment.Multiline */
  .cp { color: #999999; font-weight: bold; font-style: italic } /* Comment.Preproc */
  .c1 { color: #999988; font-style: italic } /* Comment.Single */
  .cs { color: #999999; font-weight: bold; font-style: italic } /* Comment.Special */
  .gd { color: #000000; background-color: #ffdddd } /* Generic.Deleted */
  .ge { color: #000000; font-style: italic } /* Generic.Emph */
  .gr { color: #aa0000 } /* Generic.Error */
  .gh { color: #999999 } /* Generic.Heading */
  .gi { color: #000000; background-color: #ddffdd } /* Generic.Inserted */
  .go { color: #888888 } /* Generic.Output */
  .gp { color: #555555 } /* Generic.Prompt */
  .gs { font-weight: bold } /* Generic.Strong */
  .gu { color: #aaaaaa } /* Generic.Subheading */
  .gt { color: #aa0000 } /* Generic.Traceback */
  .kc { color: #000000; font-weight: bold } /* Keyword.Constant */
  .kd { color: #000000; font-weight: bold } /* Keyword.Declaration */
  .kn { color: #000000; font-weight: bold } /* Keyword.Namespace */
  .kp { color: #000000; font-weight: bold } /* Keyword.Pseudo */
  .kr { color: #000000; font-weight: bold } /* Keyword.Reserved */
  .kt { color: #445588; font-weight: bold } /* Keyword.Type */
  .m { color: #009999 } /* Literal.Number */
  .s { color: #d01040 } /* Literal.String */
  .na { color: #008080 } /* Name.Attribute */
  .nb { color: #0086B3 } /* Name.Builtin */
  .nc { color: #445588; font-weight: bold } /* Name.Class */
  .no { color: #008080 } /* Name.Constant */
  .nd { color: #3c5d5d; font-weight: bold } /* Name.Decorator */
  .ni { color: #800080 } /* Name.Entity */
  .ne { color: #990000; font-weight: bold } /* Name.Exception */
  .nf { color: #990000; font-weight: bold } /* Name.Function */
  .nl { color: #990000; font-weight: bold } /* Name.Label */
  .nn { color: #555555 } /* Name.Namespace */
  .nt { color: #000080 } /* Name.Tag */
  .nv { color: #008080 } /* Name.Variable */
  .ow { color: #000000; font-weight: bold } /* Operator.Word */
  .w { color: #bbbbbb } /* Text.Whitespace */
  .mf { color: #009999 } /* Literal.Number.Float */
  .mh { color: #009999 } /* Literal.Number.Hex */
  .mi { color: #009999 } /* Literal.Number.Integer */
  .mo { color: #009999 } /* Literal.Number.Oct */
  .sb { color: #d01040 } /* Literal.String.Backtick */
  .sc { color: #d01040 } /* Literal.String.Char */
  .sd { color: #d01040 } /* Literal.String.Doc */
  .s2 { color: #d01040 } /* Literal.String.Double */
  .se { color: #d01040 } /* Literal.String.Escape */
  .sh { color: #d01040 } /* Literal.String.Heredoc */
  .si { color: #d01040 } /* Literal.String.Interpol */
  .sx { color: #d01040 } /* Literal.String.Other */
  .sr { color: #009926 } /* Literal.String.Regex */
  .s1 { color: #d01040 } /* Literal.String.Single */
  .ss { color: #990073 } /* Literal.String.Symbol */
  .bp { color: #999999 } /* Name.Builtin.Pseudo */
  .vc { color: #008080 } /* Name.Variable.Class */
  .vg { color: #008080 } /* Name.Variable.Global */
  .vi { color: #008080 } /* Name.Variable.Instance */
  .il { color: #009999 } /* Literal.Number.Integer.Long */
}

.main {
  margin-top: 60px;
}
.Gotham {
  font-family: Gotham;
}
.txtCenter {
  text-align: center;
}
.full-width {
  width: 100%;
}